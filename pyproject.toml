[project]
name = "mure"
version = "2.0.0b3"
description = "Perform multiple HTTP requests concurrently â€“ without worrying about async/await."
authors = [{ name = "Severin Simmler", email = "s.simmler@snapaddy.com" }]
requires-python = "~=3.11"
readme = "README.md"
dependencies = [
    "chardet>=5.2.0",
    "httpx[http2]>=0.28.1",
    "hishel>=0.1.2",
]

[project.optional-dependencies]
sqlite = [
    "hishel[sqlite]>=0.1.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pre-commit>=4.2.0",
    "ruff>=0.11.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 99
extend-include = ["*.ipynb"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # Module imported but unused
]
"*.ipynb" = [
    "B018", # Found useless expression
    "E402", # Module level import not at top of file
    "E501", # Line too long
]
"test_*.py" = [
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "E501", # Line too long
    "S101", # Use of assert detected
]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
    "YTT", # flake8-2020
    "FBT", # flake8-boolean-trap
    "B",   # flake8-bugbear
    "S",   # flake8-bandit
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "I",   # isort
    "NPY", # NumPy-specific rules
    "N",   # pep8-naming
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "D",   # pydocstyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]
ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "E402",   # Module level import not at top of file
    "ISC001", # Implicit string concatenation
    "N803",   # Argument name should be lowercase
    "N806",   # Variable in function should be lowercase
    "RUF002", # Docstring contains ambiguous character
    "RUF003", # Comment contains ambiguous character
    "RUF001", # String contains ambiguous character
    "S608",   # Possible SQL injection vector through string-based query construction
    "S110",   # Consider logging the exception before pass
    "S112",   # Consider logging the exception before continue
    "S105",   # Possible hardcoded password
    "S320",   # Using lxml to parse untrusted data
    "S311",   # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S301",   # Pickle is used to serialize data
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
